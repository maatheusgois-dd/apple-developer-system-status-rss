name: Generate App Attest RSS

on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: true

      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - run: pip install requests feedgen

-      - name: Fetch status and generate RSS
-        run: |
-          python - << 'EOF'
-          import requests, json, datetime
-          from feedgen.feed import FeedGenerator
-
-          url = 'https://www.apple.com/support/systemstatus/data/developer/system_status_en_US.js'
-          txt = requests.get(url).text
-
-          prefix = 'var systemStatus = '
-          if txt.startswith(prefix):
-              body = txt[len(prefix):].rstrip().rstrip(';')
-              data = json.loads(body)
-          else:
-              data = json.loads(txt)
-
-          components = data.get('components', [])
-          app_attest = next((c for c in components if 'App Attest' in c.get('name','')), None)
-
-          fg = FeedGenerator()
-          fg.title('Apple Developer System Status â€“ App Attest')
-          fg.link(href='https://www.apple.com/support/systemstatus/', rel='alternate')
-          fg.description('Latest updates for Apple App Attest')
-          fg.language('en')
-
-          if app_attest:
-              for u in app_attest.get('updates', []):
-                  e = fg.add_entry()
-                  e.id(u.get('number','') + u.get('date',''))
-                  e.title(f"{app_attest['name']}: {u.get('message','')}")
-                  e.link(href='https://www.apple.com/support/systemstatus/')
-                  try:
-                      dt = datetime.datetime.fromisoformat(u.get('date').replace('Z','+00:00'))
-                  except:
-                      dt = datetime.datetime.utcnow()
-                  e.pubDate(dt)
-                  e.description(u.get('message',''))
-          else:
-              e = fg.add_entry()
-              now = datetime.datetime.utcnow()
-              e.id(now.isoformat())
-              e.title('App Attest status not found')
-              e.link(href='https://www.apple.com/support/systemstatus/')
-              e.pubDate(now)
-              e.description('No App Attest component could be located in the system status feed.')
-
-          rss = fg.rss_str(pretty=True)
-          with open('app-attest-status.rss', 'wb') as f:
-              f.write(rss)
-          EOF
+      - name: Fetch status and generate RSS
+        run: |
+          set -euo pipefail
+          python - << 'EOF'
+import re, sys, requests, json, datetime
+from feedgen.feed import FeedGenerator
+
+# 1) Download the JS payload
+url = 'https://www.apple.com/support/systemstatus/data/developer/system_status_en_US.js'
+txt = requests.get(url).text
+
+# 2) Extract the JSON object with a regex
+match = re.search(r'var\s+systemStatus\s*=\s*(\{.*\})\s*;', txt, re.DOTALL)
+if not match:
+    print("ðŸ’¥ ERROR: couldn't find the systemStatus JSON block in the downloaded JS.", file=sys.stderr)
+    sys.exit(1)
+data = json.loads(match.group(1))
+
+# 3) Locate the App Attest component
+components = data.get('components', [])
+app_attest = next((c for c in components if 'App Attest' in c.get('name','')), None)
+
+# 4) Build the RSS feed
+fg = FeedGenerator()
+fg.title('Apple Developer System Status â€“ App Attest')
+fg.link(href='https://www.apple.com/support/systemstatus/', rel='alternate')
+fg.description('Latest updates for Apple App Attest')
+fg.language('en')
+
+if app_attest:
+    for u in app_attest.get('updates', []):
+        e = fg.add_entry()
+        e.id((u.get('number','') or '') + (u.get('date','') or ''))
+        e.title(f"{app_attest['name']}: {u.get('message','')}")
+        e.link(href='https://www.apple.com/support/systemstatus/')
+        try:
+            # Normalize Zulu to +00:00 for fromisoformat
+            dt = datetime.datetime.fromisoformat(u.get('date','').replace('Z','+00:00'))
+        except Exception:
+            dt = datetime.datetime.utcnow()
+        e.pubDate(dt)
+        e.description(u.get('message',''))
+else:
+    now = datetime.datetime.utcnow()
+    e = fg.add_entry()
+    e.id(now.isoformat())
+    e.title('App Attest status not found')
+    e.link(href='https://www.apple.com/support/systemstatus/')
+    e.pubDate(now)
+    e.description('No App Attest entry found in the system status feed.')
+
+# 5) Output
+with open('app-attest-status.rss', 'wb') as f:
+    f.write(fg.rss_str(pretty=True))
+EOF

      - name: Commit and push RSS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add app-attest-status.rss
          git commit -m "chore: update App Attest RSS feed [skip ci]" || echo "No changes to commit"
          git push
